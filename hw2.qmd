---
title: "Homework 2"
author: "[Evan Eissfeldt]{style='background-color: yellow;'}"
toc: true
title-block-banner: true
title-block-style: default
format: html
# format: pdf
---

[Link to the Github repository](https://github.com/STAT380/hw2.git)

---

::: {.callout-important style="font-size: 0.8em;"}
## Due: Feb 9, 2024 @ 11:59pm

Please read the instructions carefully before submitting your assignment.

1. This assignment requires you to only upload a `PDF` file on Canvas
1. Don't collapse any code cells before submitting. 
1. Remember to make sure all your code output is rendered properly before uploading your submission.

⚠️ Please add your name to the author information in the frontmatter before submitting your assignment ⚠️
:::

For this assignment, we will be using the [Abalone dataset](http://archive.ics.uci.edu/ml/datasets/Abalone) from the UCI Machine Learning Repository. The dataset consists of physical measurements of abalone (a type of marine snail) and includes information on the age, sex, and size of the abalone.

We will be using the following libraries:

```{R}
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(purrr)
library(cowplot)
```


<br><br><br><br>
---

## Question 1
::: {.callout-tip}
## 30 points
EDA using `readr`, `tidyr` and `ggplot2`
:::

###### 1.1 (5 points)

Load the "Abalone" dataset as a tibble called `abalone` using the URL provided below. The `abalone_col_names` variable contains a vector of the column names for this dataset (to be consistent with the R naming pattern). Make sure you read the dataset with the provided column names. 

```{R}
library(readr)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"

abalone_col_names <- c(
  "sex", 
  "length", 
  "diameter", 
  "height", 
  "whole_weight", 
  "shucked_weight", 
  "viscera_weight", 
  "shell_weight", 
  "rings"
)

abalone <- read_csv(url, col_names = abalone_col_names)
```

---

###### 1.2 (5 points)

Remove missing values and `NA`s from the dataset and store the cleaned data in a tibble called `df`. How many rows were dropped?

```{R}
df <- abalone %>%
  drop_na()
```
```{R}
rows_dropped <- nrow(abalone) - nrow(df)
rows_dropped
```
0 rows were dropped.


---

##### 1.3 (5 points)

Plot histograms of all the quantitative variables in a **single plot** [^footnote_facet_wrap]
```{R}
hist <- ggplot(abalone, aes(x = length)) + geom_histogram(binwidth = 0.03) + facet_wrap(~sex, ncol = 4)
hist
```


---

##### 1.4 (5 points)

Create a boxplot of `length` for each `sex` and create a violin-plot of of `diameter` for each `sex`. Are there any notable differences in the physical appearences of abalones based on your analysis here?

```{R}
boxplot_length <- ggplot(df, aes(x = sex, y = length, fill = sex)) +
  geom_boxplot()
boxplot_length
```
```{R}
violinplot_diameter <- ggplot(df, aes(x = sex, y = diameter, fill = sex)) +
  geom_violin()
violinplot_diameter
```
It seems that the male and females are on average longer than the intersex ones, where the males have more outliers on the lower end. It also seems that females and males have larger diameters on average when compared to the intersex ones.

---

###### 1.5  (5 points)

Create a scatter plot of `length` and `diameter`, and modify the shape and color of the points based on the `sex` variable. Change the size of each point based on the `shell_wight` value for each observation. Are there any notable anomalies in the dataset?



```{R}
scatter_plot <- ggplot(df, aes(x = length, y = diameter, shape = sex, color = sex, size = shell_weight)) +
  geom_point()
scatter_plot
```
For the most part, the females and males have larger lengths and diameters, while also having a higher shell weight. There is one large anomaly, as there is an intersex abalone which has a much larger diameter than other abalones of similar length.
---

###### 1.6 (5 points)

For each `sex`, create separate scatter plots of `length` and `diameter`. For each plot, also add a **linear** trendline to illustrate the relationship between the variables. Use the `facet_wrap()` function in R for this, and ensure that the plots are vertically stacked **not** horizontally. You should end up with a plot that looks like this: [^footnote_plot_facet]


```{R}
scatter_plots <- ggplot(df, aes(x = length, y = diameter)) +
  geom_point() +
  geom_smooth(method = "lm", color = "blue") +  
  facet_wrap(~sex, scales = "free_y", ncol = 1)
scatter_plots
```





<br><br><br><br>
<br><br><br><br>
---

## Question 2
::: {.callout-tip}
## 40 points
More advanced analyses using `dplyr`, `purrrr` and `ggplot2`
:::


---

###### 2.1 (10 points)

Filter the data to only include abalone with a length of at least $0.5$ meters. Group the data by `sex` and calculate the mean of each variable for each group. Create a bar plot to visualize the mean values for each variable by `sex`.


```{R}
df %>%
  filter(length >= 0.5) %>%
  group_by(sex) %>%
  summarize(across(everything(), mean)) %>%
  pivot_longer(cols = -sex, names_to = "variable", values_to = "mean") %>%
  ggplot(aes(x = sex, y = mean, fill = sex)) +
  geom_bar(stat = "identity", position = "dodge")

```


---

###### 2.2 (15 points)

Implement the following in a **single command**:

1. Temporarily create a new variable called `num_rings` which takes a value of:

  * `"low"` if `rings < 10`
  * `"high"` if `rings > 20`, and
  * `"med"` otherwise

2. Group `df` by this new variable and `sex` and compute `avg_weight` as the average of the `whole_weight + shucked_weight + viscera_weight + shell_weight` for each combination of `num_rings` and `sex`. 

3. Use the `geom_tile()` function to create a tile plot of `num_rings` vs `sex` with the color indicating of each tile indicating the `avg_weight` value. 


```{R}
df %>%
  mutate(num_rings = case_when(
    rings < 10 ~ "low",
    rings > 20 ~ "high",
    TRUE ~ "med"
  )) %>%
  group_by(num_rings, sex) %>%
  summarize(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
  ggplot(aes(x = num_rings, y = sex, fill = avg_weight)) +
  geom_tile()
```



---

###### 2.3 (5 points)

Make a table of the pairwise correlations between all the numeric variables rounded to 2 decimal points. Your final answer should look like this [^footnote_table]


```{R}
numericVariables <- df %>%
  select_if(is.numeric)
correlations <- round(cor(numericVariables), 2)
print(correlations)
```



---

###### 2.4 (10 points)

Use the `map2()` function from the `purrr` package to create a scatter plot for each _quantitative_ variable against the number of `rings` variable. Color the points based on the `sex` of each abalone. You can use the `cowplot::plot_grid()` function to finally make the following grid of plots.

:::{.content-visible when-format="html"}
![](images/plot_grid.png)
:::


```{R}
quantitative_variables <- df %>%
  select_if(is.numeric)

scatter_plots <- map2(quantitative_variables, colnames(quantitative_variables),
                      function(var, var_name) {
                        ggplot(df, aes(x = rings, y = get(var_name), color = sex)) +
                          geom_point() +
                          labs(title = paste("Rings vs", var_name),
                               x = "Rings",
                               y = var_name)
                      })
grid <- plot_grid(plotlist = scatter_plots)
print(grid)
```



<br><br><br><br>
<br><br><br><br>
---

## Question 3
::: {.callout-tip}
## 30 points

Linear regression using `lm`
:::

---

###### 3.1 (10 points)

Perform a simple linear regression with `diameter` as the covariate and `height` as the response. Interpret the model coefficients and their significance values. 


```{R}
linear_model <- lm(height ~ diameter, data = df)
summary(linear_model)
```
The intercept is not meaningful because we do not have cases where diameter is zero. The residual standard error is an estimation of the standard deviation. The multiple and adjusted R-squared is saying that 69.5% of the variability in the height can be explained by the diameter. The very small p-value indicates that this model is meaningful.


---

###### 3.2 (10 points)

Make a scatterplot of `height` vs `diameter` and plot the regression line in `color="red"`. You can use the base `plot()` function in R for this. Is the linear model an appropriate fit for this relationship? Explain. 


```{R}
plot(df$diameter, df$height)
abline(lm(height ~ diameter, data = df), col = "red")
```
Yes, the linear model is an appropriate fit for this relationship, as the regression line travers directly through the center of the plotted points. The points are closely grouped around the line with very little outliers.


---

###### 3.3  (10 points)

Suppose we have collected observations for "new" abalones with `new_diameter` values given below. What is the expected value of their `height` based on your model above? Plot these new observations along with your predictions in your plot from earlier using `color="violet"`

```{R}

new_diameters <- c(
  0.15218946,
  0.48361548,
  0.58095513,
  0.07603687,
  0.50234599,
  0.83462092,
  0.95681938,
  0.92906875,
  0.94245437,
  0.01209518
)

new_data <- data.frame(diameter = new_diameters)
predicted_height <- predict(linear_model, newdata = new_data)
predicted_height
```
```{R}
plot(df$diameter, df$height)
abline(lm(height ~ diameter, data = df), col = "red")
points(new_diameters, predicted_height, col = "violet")
```





:::{.hidden unless-format="pdf"}
\pagebreak
:::

<br><br><br><br>
<br><br><br><br>
---


# Appendix

::: {.callout-note collapse="true"}
## Session Information

Print your `R` session information using the following command

```{R}
sessionInfo()
```
:::

[^footnote_facet_wrap]:
  You can use the `facet_wrap()` function for this. Have a look at its documentation using the help console in R

[^footnote_plot_facet]:
  Plot example for 1.6<br>
  [![](images/lines.png){style="height: 5em;"}]{.content-visible when-format="html"}

[^footnote_table]:
  Table for 2.3<br>

:::{.content-visible when-format="html"}

| length| diameter| height| whole_weight| shucked_weight| viscera_weight| shell_weight| rings|
|:--------------|------:|--------:|------:|------------:|--------------:|--------------:|------------:|-----:|
|length         |   1.00|     0.99|   0.83|         0.93|           0.90|           0.90|         0.90|  0.56|
|diameter       |   0.99|     1.00|   0.83|         0.93|           0.89|           0.90|         0.91|  0.57|
|height         |   0.83|     0.83|   1.00|         0.82|           0.77|           0.80|         0.82|  0.56|
|whole_weight   |   0.93|     0.93|   0.82|         1.00|           0.97|           0.97|         0.96|  0.54|
|shucked_weight |   0.90|     0.89|   0.77|         0.97|           1.00|           0.93|         0.88|  0.42|
|viscera_weight |   0.90|     0.90|   0.80|         0.97|           0.93|           1.00|         0.91|  0.50|
|shell_weight   |   0.90|     0.91|   0.82|         0.96|           0.88|           0.91|         1.00|  0.63|
|rings          |   0.56|     0.57|   0.56|         0.54|           0.42|           0.50|         0.63|  1.00|

:::